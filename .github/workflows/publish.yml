name: Publish

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to publish (leave empty to use latest tag)"
        required: false
        type: string
      beta:
        description: "Publish as beta (npm --tag=beta)"
        required: false
        type: boolean
        default: false

jobs:
  publish:
    name: Publish to NPM and JSR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.5.x

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org/

      - name: Run checks
        run: deno task check

      - name: Determine version and npm tag
        id: version_info
        run: |
          # Determine the version to use
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
            # Remove 'v' prefix if present
            VERSION=${VERSION#v}
            if [ "${{ github.event.release.prerelease }}" = "true" ]; then
              echo "npm_tag=beta" >> $GITHUB_OUTPUT
            else
              echo "npm_tag=latest" >> $GITHUB_OUTPUT
            fi
          elif [ -n "${{ inputs.tag }}" ]; then
            VERSION="${{ inputs.tag }}"
            # Remove 'v' prefix if present
            VERSION=${VERSION#v}
            if [ "${{ inputs.beta }}" = "true" ]; then
              echo "npm_tag=beta" >> $GITHUB_OUTPUT
            else
              echo "npm_tag=latest" >> $GITHUB_OUTPUT
            fi
          else
            echo "Error: No version specified"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Bump deno.json version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          jq '.version = "${{ steps.version_info.outputs.version }}"' deno.json > deno.json.tmp
          mv deno.json.tmp deno.json
          cat deno.json
          git add deno.json
          git commit -m "Bump version to ${{ steps.version_info.outputs.version }}"
          git push

      - name: Publish to JSR
        run: npx jsr publish

      - name: Build Node-compatible package
        run: deno task build-npm

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd npm
          npm publish --provenance --access public --tag=${{ steps.version_info.outputs.npm_tag }}
